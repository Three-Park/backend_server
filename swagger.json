{
    "swagger": "2.0",
    "info": {
        "title": "Snippets API",
        "description": "Fairy-Tairy - API document",
        "termsOfService": "https://www.google.com/policies/terms/",
        "contact": {
            "email": "kateking001130@ewhain.net"
        },
        "license": {
            "name": "BSD License"
        },
        "version": "v1"
    },
    "host": "43.202.125.125:8000",
    "schemes": ["http"],
    "basePath": "/",
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "JWT Token"
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/books/": {
            "get": {
                "operationId": "books_list",
                "summary": "책(표지)의 list를 불러오는 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Book"
                            }
                        }
                    }
                },
                "tags": ["books"]
            },
            "post": {
                "operationId": "books_create",
                "summary": "book의 id를 통해 책의 표지를 생성하는 API",
                "description": "---\n일기를 하나로 묶어주는 Book(표지) API",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                },
                "tags": ["books"]
            },
            "parameters": []
        },
        "/books/{id}/": {
            "get": {
                "operationId": "books_read",
                "summary": "book의 id를 통해 책의 표지 정보 조회하는 API",
                "description": "---\n일기를 하나로 묶어주는 Book(표지) API",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                },
                "tags": ["books"]
            },
            "put": {
                "operationId": "books_update",
                "summary": "책의 표지 정보를 업데이트하는 API",
                "description": "---\n일기를 하나로 묶어주는 Book(표지) API",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                },
                "tags": ["books"]
            },
            "patch": {
                "operationId": "books_partial_update",
                "summary": "책의 표지 정보를 업데이트하는 API",
                "description": "---\n일기를 하나로 묶어주는 Book(표지) API",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                },
                "tags": ["books"]
            },
            "delete": {
                "operationId": "books_delete",
                "description": "일기를 하나로 묶어주는 Book(표지) API",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["books"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this book.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/books/{id}/read_diary/": {
            "get": {
                "operationId": "books_read_diary",
                "summary": "책의 order를 이용해서 일기 조회하는 API",
                "description": "---\nid : book의 id\norder : 책의 page order\n\n## 예시\n\n    GET /books/1/read_diary/?order=2\n\n## response:\n\n    {\n        \"id\": 100,\n        \"user\": 1,\n        \"title\": \"string\",\n        \"content\": \"string\",\n        \"registered_at\": \"2024-05-03T09:16:27.901055+09:00\",\n        \"last_update_at\": \"2024-05-03T09:16:27.901055+09:00\",\n        \"is_open\": true\n    }",
                "parameters": [
                    {
                        "name": "order",
                        "in": "query",
                        "description": "책의 페이지 순서",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Diary"
                        }
                    },
                    "404": {
                        "description": "연결된 일기가 없습니다."
                    }
                },
                "tags": ["books"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this book.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/community/": {
            "get": {
                "operationId": "community_list",
                "summary": "나와 이웃들의 공개된 일기목록 조회 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommunityDiary"
                            }
                        }
                    }
                },
                "tags": ["community"]
            },
            "parameters": []
        },
        "/community/{id}/": {
            "get": {
                "operationId": "community_read",
                "summary": "이웃의 일기를 조회하는 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CommunityDiary"
                        }
                    }
                },
                "tags": ["community"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this diary.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/diary/": {
            "get": {
                "operationId": "diary_list",
                "summary": "diary_list 작성한 일기 목록 조회 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Diary"
                            }
                        }
                    }
                },
                "tags": ["diary"]
            },
            "post": {
                "operationId": "diary_create",
                "summary": "diary_create 오늘의 일기를 작성하는 API",
                "description": "---\n## 예시 request:\n\n        {\n            \"user\": 1,\n            \"title\": \"일기 제목\",\n            \"content\": \"일기 내용\",\n            \"is_open\": true\n        }\n\n## 예시 response:\n        201\n        {\n            \"id\": 1,\n            \"user\": 1,\n            \"title\": \"일기 제목\",\n            \"content\": \"일기 내용\",\n            \"is_open\": true,\n            \"registered_at\": \"2024-05-03T10:00:00Z\",\n            \"last_update_at\": \"2024-05-03T10:00:00Z\",\n            \"music\": null,\n            \"image_set\": [],\n            \"emotion_set\": [],\n        }\n        400\n        {'detail':  '오늘은 이미 일기를 작성했습니다.'}",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Diary"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Diary"
                        }
                    }
                },
                "tags": ["diary"]
            },
            "parameters": []
        },
        "/diary/get_diary_by_date/": {
            "get": {
                "operationId": "diary_get_diary_by_date",
                "summary": "get_diary_by_date 선택된 날짜에 해당하는 일기를 조회하는 API",
                "description": "---\n## 예시 request:\n\n        GET /diary/get_diary_by_date/?date=2024-05-02\n\n## 예시 response:\n        200\n        {\n            \"id\": 99,\n            \"user\": 1,\n            \"title\": \"string\",\n            \"content\": \"string\",\n            \"registered_at\": \"2024-05-02T11:49:18.034414+09:00\",\n            \"last_update_at\": \"2024-05-02T11:49:18.034451+09:00\",\n            \"is_open\": true\n        }\n        404\n        {'detail': '해당 날짜에 일기가 없습니다.'}",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "날짜 (YYYY-MM-DD 형식)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Diary"
                        }
                    },
                    "404": {
                        "description": "해당 날짜에 일기가 없습니다."
                    }
                },
                "tags": ["diary"]
            },
            "parameters": []
        },
        "/diary/{id}/": {
            "get": {
                "operationId": "diary_read",
                "summary": "diary_read 작성한 일기의 내용을 조회하는 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Diary"
                        }
                    }
                },
                "tags": ["diary"]
            },
            "put": {
                "operationId": "diary_update",
                "summary": "diary_update 이미 작성한 일기의 내용을 수정하는 API",
                "description": "---\n이떄 이미지, emotion은 결과 삭제됨. 재생성 해야함.\n이미지 생성 : post image/\nemotion&응원문구 분석:  post emotion/\nmusic의 경우 diary_music으로 재추천 해야 함 : put /diary_music/{일기id}",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Diary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Diary"
                        }
                    }
                },
                "tags": ["diary"]
            },
            "patch": {
                "operationId": "diary_partial_update",
                "summary": "diary_partial_update 이미 작성한 일기의 내용을 수정하는 API",
                "description": "---\n이떄 이미지, emotion은 결과 삭제됨. 재생성 해야함.\n이미지 생성 : post image/\nemotion&응원문구 분석:  post emotion/\nmusic의 경우 diary_music으로 재추천 해야 함 : put /diary_music/{일기id}",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Diary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Diary"
                        }
                    }
                },
                "tags": ["diary"]
            },
            "delete": {
                "operationId": "diary_delete",
                "summary": "diary_delete 작성한 일기를 삭제하는 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["diary"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this diary.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/diary/{id}/get_emotions_for_diary/": {
            "get": {
                "operationId": "diary_get_emotions_for_diary",
                "summary": "특정 일기에 대한 감정 조회 API",
                "description": "---\n## id : 일기의 ID\n\n## 예시 response:\n        201\n        {\n            \"id\": 2,\n            \"emotion_label\": \"불안\",\n            \"emotion_prompt\": \"\",\n            \"chat\": \" 이별은 사실일지도 모르겠어요 \",\n            \"diary\": 2\n        }\n        404 {'detail': '해당 일기에 대한 감정 결과가 없습니다.'}",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Emotion"
                        }
                    },
                    "404": {
                        "description": "해당 일기에 대한 감정 결과가 없습니다."
                    }
                },
                "tags": ["diary"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this diary.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/diary/{id}/get_images_for_diary/": {
            "get": {
                "operationId": "diary_get_images_for_diary",
                "summary": "특정 일기에 대한 이미지 조회 API",
                "description": "---\n## id : 일기의 ID\n\n## 예시 response:\n        201\n        {\n            \"id\": 67,\n            \"created_at\": \"2024-04-30T13:32:03.463757+09:00\",\n            \"image_url\": \"https://버킷주소/images/39c9ebea-4364-4d64-b894-8ea63d0802c4.jpg\",\n            \"image_prompt\": \"프롬프트\",\n            \"diary\": 2\n        }\n        404 {'detail': '해당 일기에 대한 이미지가 없습니다.'}",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    },
                    "404": {
                        "description": "해당 일기에 대한 이미지가 없습니다."
                    }
                },
                "tags": ["diary"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this diary.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/diary_music/": {
            "get": {
                "operationId": "diary_music_list",
                "summary": "diary_music_list 일기에 연결된 음악의 목록을 조회하는 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DiaryMusic"
                            }
                        }
                    }
                },
                "tags": ["diary_music"]
            },
            "parameters": []
        },
        "/diary_music/{id}/": {
            "get": {
                "operationId": "diary_music_read",
                "summary": "diary_music_retrieve 해당 일기에 추천된 음악을 조회하는 API",
                "description": "---\n### id = 일기 ID",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiaryMusic"
                        }
                    }
                },
                "tags": ["diary_music"]
            },
            "put": {
                "operationId": "diary_music_update",
                "summary": "diary_music_update 일기에 대해 음악을 추천하는 API",
                "description": "---\n### id = 일기 ID\n최대 15초 소요 가능\n### 예시 request:\n\n        {\n            \"user\": 1,\n        }\n\n### 예시 response:\n        200\n        {\n            \"id\": 1,\n            \"user\": 1,\n            \"content\": \"너무 두근거린다! 과연 rds에 내 다이어리가 잘 올라갈까? 오늘 이것만 성공하면 너무 즐거운 마음으로 잘 수 있을것 같다!\",\n            \"music\": {\n                \"id\": 1,\n                \"music_title\": \"그대만 있다면 (여름날 우리 X 너드커넥션 (Nerd Connection))\",\n                \"artist\": \"너드커넥션 (Nerd Connection)\",\n                \"genre\": \"발라드\"\n            }\n        }\n        401 \n        400\n        {'detail': 'Failed to get similar music from Flask'}",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiaryMusic"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiaryMusic"
                        }
                    }
                },
                "tags": ["diary_music"]
            },
            "patch": {
                "operationId": "diary_music_partial_update",
                "summary": "diary_music_partial_update 일기에 대해 음악을 추천하는 API (==update)",
                "description": "---\n### id = 일기 ID\nupdate와 동일하게 동작.\n최대 15초 소요 가능",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DiaryMusic"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DiaryMusic"
                        }
                    }
                },
                "tags": ["diary_music"]
            },
            "delete": {
                "operationId": "diary_music_delete",
                "summary": "diary_music_delete 현재 일기의 음악 연결 삭제",
                "description": "---\n## 예시\n\n    response: 200\n    {\n        \"id\": 1,\n        \"user\": 1,\n        \"content\": \"일기 내용\",\n        \"music\": null\n    }\n\n    response: 400\n    {'detail': 'No music to disconnect'}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "일기의 ID",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "일기에서 음악 연결 삭제",
                        "schema": {
                            "$ref": "#/definitions/DiaryMusic"
                        }
                    },
                    "400": {
                        "description": "No music to disconnect"
                    }
                },
                "tags": ["diary_music"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this diary.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/dj-rest-auth/login/": {
            "post": {
                "operationId": "dj-rest-auth_login_create",
                "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/logout/": {
            "get": {
                "operationId": "dj-rest-auth_logout_list",
                "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.",
                "description": "Accepts/Returns nothing.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "post": {
                "operationId": "dj-rest-auth_logout_create",
                "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.",
                "description": "Accepts/Returns nothing.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/password/change/": {
            "post": {
                "operationId": "dj-rest-auth_password_change_create",
                "summary": "Calls Django Auth SetPasswordForm save method.",
                "description": "Accepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordChange"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordChange"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/password/reset/": {
            "post": {
                "operationId": "dj-rest-auth_password_reset_create",
                "summary": "Calls Django Auth PasswordResetForm save method.",
                "description": "Accepts the following POST parameters: email\nReturns the success/fail message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordReset"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordReset"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/password/reset/confirm/": {
            "post": {
                "operationId": "dj-rest-auth_password_reset_confirm_create",
                "summary": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.",
                "description": "Accepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordResetConfirm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordResetConfirm"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/registration/": {
            "post": {
                "operationId": "dj-rest-auth_registration_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Register"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Register"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/registration/resend-email/": {
            "post": {
                "operationId": "dj-rest-auth_registration_resend-email_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResendEmailVerification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResendEmailVerification"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/registration/verify-email/": {
            "post": {
                "operationId": "dj-rest-auth_registration_verify-email_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VerifyEmail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VerifyEmail"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/token/refresh/": {
            "post": {
                "operationId": "dj-rest-auth_token_refresh_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CookieTokenRefresh"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CookieTokenRefresh"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/token/verify/": {
            "post": {
                "operationId": "dj-rest-auth_token_verify_create",
                "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenVerify"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenVerify"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/dj-rest-auth/user/": {
            "get": {
                "operationId": "dj-rest-auth_user_read",
                "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
                "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "put": {
                "operationId": "dj-rest-auth_user_update",
                "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
                "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "patch": {
                "operationId": "dj-rest-auth_user_partial_update",
                "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
                "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                },
                "tags": ["dj-rest-auth"]
            },
            "parameters": []
        },
        "/emotion/": {
            "get": {
                "operationId": "emotion_list",
                "summary": "emmtion_list 내가 작성한 일기의 감정라벨, 응원문구 목록 조회 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Emotion"
                            }
                        }
                    }
                },
                "tags": ["emotion"]
            },
            "post": {
                "operationId": "emotion_create",
                "summary": "emotion_create 일기 내용으로 감정라벨, 응원문구 생성 하는 API",
                "description": "---\n## 예시 request:\n\n    {\n        'diary' : 2\n    }\n\n## 예시 response:\n\n    200\n    {\n        \"id\": 2,\n        \"emotion_label\": \"불안\",\n        \"emotion_prompt\": \"\",\n        \"chat\": \" 이별은 사실일지도 모르겠어요 \",\n        \"diary\": 2\n    }",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Emotion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Emotion"
                        }
                    }
                },
                "tags": ["emotion"]
            },
            "parameters": []
        },
        "/emotion/{id}/": {
            "delete": {
                "operationId": "emotion_delete",
                "summary": "emotion_delete 감정라벨, 응원문구 삭제하는 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["emotion"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this emotion.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/follow/": {
            "get": {
                "operationId": "follow_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Follow"
                            }
                        }
                    }
                },
                "tags": ["follow"]
            },
            "post": {
                "operationId": "follow_create",
                "summary": "팔로우 요청하는 API",
                "description": "---\n\n### id : 팔로우 요청의 id\n\n\n## 예시 request:\n\n    {\n        \"username\": \"threepark\"\n    }\n\n## 예시 response:\n    201\n    {\n        \"id\": 11,\n        \"status\": \"requested\",\n        \"follower\": 3,\n        \"following_user\": 1\n    }\n\n    400\n    {\n        \"message\": \"Cannot Follow yourself, {username}.\"\n    }\n\n    400\n    {\n        \"message\": \"Follow request already sent to {username}.\"\n    }",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "description": "팔로우 요청할 유저의 username",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "description": "팔로우 요청할 유저의 username",
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": ["follow"]
            },
            "parameters": []
        },
        "/follow/{id}/": {
            "get": {
                "operationId": "follow_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Follow"
                        }
                    }
                },
                "tags": ["follow"]
            },
            "put": {
                "operationId": "follow_update",
                "summary": "팔로우 요청 허용하는 API",
                "description": "---\n\n### id : 팔로우 요청의 id\n\n## 예시 response:\n\n    200\n    {\n        \"id\": 11,\n        \"status\": \"accepted\",\n        \"follower\": 3,\n        \"following_user\": 1\n    }\n    401 권한이 없습니다",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "tags": ["follow"]
            },
            "patch": {
                "operationId": "follow_partial_update",
                "summary": "팔로우 요청 거절하는 API",
                "description": "---\n\n### id : 팔로우 요청의 id\n\n## 예시 response:\n\n    200\n    {\n        \"id\": 9,\n        \"status\": \"rejected\",\n        \"follower\": 2,\n        \"following_user\": 1\n    }",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "tags": ["follow"]
            },
            "delete": {
                "operationId": "follow_delete",
                "summary": "팔로우 요청 삭제/취소하는 API",
                "description": "---\n\n### id : 팔로우 요청의 id\n\n## 예시 response:\n\n    204\n    {\"message\": \"Follow request deleted\"}",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["follow"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this follow.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/image/": {
            "get": {
                "operationId": "image_list",
                "summary": "이미지 목록을 조회하는 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Image"
                            }
                        }
                    }
                },
                "tags": ["image"]
            },
            "post": {
                "operationId": "image_create",
                "summary": "이미지 생성 API",
                "description": "---\n\n### 응답에 최대 40초 소요 가능 \n## 예시 request:\n\n    {\n        'diary' : 1\n    }\n\n## 예시 response:\n\n    201\n    {\n          \"id\": 70,\n            \"created_at\": \"2024-05-02T13:04:10.208658+09:00\",\n            \"image_url\": \"https://버킷주소/images/826cb58e-46a3-41fc-9699-bc2eccdc1355.jpg\",\n            \"image_prompt\": \"(masterpiece,detailed), (Oil Painting:1.3), (Impressionism:1.3) ,(oil painting with brush strokes:1.2), (looking away:1.1), a girl in a traditional Korean hanbok, cherry blossom background, soft pastel colors, Korean artist reference, (ethereal:1.2), (delicate details:1.3), (dreamy atmosphere:1.25)\",\n            \"diary\": 1\n    }\n    400\n    {\n        'error': \"Failed to get image from Flask\" 이 경우 AI 서버가 꺼져있을때임\n    }\n    400\n    {\n        'error': \"Error uploading image: {str(e)}\"\n    }\n    401 unauthorized\n    403 CSRF token missing",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                },
                "tags": ["image"]
            },
            "parameters": []
        },
        "/image/{id}/": {
            "get": {
                "operationId": "image_read",
                "summary": "이미지 ID로 이미지를 조회하는 API",
                "description": "---\n\n## 예시 response\n    201\n        {\n            \"id\": 70,\n                \"created_at\": \"2024-05-02T13:04:10.208658+09:00\",\n                \"image_url\": \"https://버킷주소/images/826cb58e-46a3-41fc-9699-bc2eccdc1355.jpg\",\n                \"image_prompt\": \"(masterpiece,detailed), (Oil Painting:1.3), (Impressionism:1.3) ,(oil painting with brush strokes:1.2), (looking away:1.1), a girl in a traditional Korean hanbok, cherry blossom background, soft pastel colors, Korean artist reference, (ethereal:1.2), (delicate details:1.3), (dreamy atmosphere:1.25)\",\n                \"diary\": 1\n        }",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                },
                "tags": ["image"]
            },
            "put": {
                "operationId": "image_update",
                "summary": "이미지 업데이트(재생성) API",
                "description": "---\n\n### 응답에 최대 40초 소요 가능 \n\n### id : 이미지의 id\n\n## 예시 response:\n\n    201\n    {\n        \"id\": 이미지의 ID,\n        \"created_at\": \"생성 날짜\",\n        \"image_url\": \"s3에 저장된 이미지 url\",\n        \"image_prompt\": \"이미지 생성 프롬프트\",\n        \"diary\": 일기의 ID\n    }\n    401 unauthorized\n    400\n    {\n        'error': \"Failed to get image from Flask\" 이 경우 AI 서버가 꺼져있을때임\n    }\n    400\n    {\n        'error': \"Error uploading image: {str(e)}\" \n    }",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                },
                "tags": ["image"]
            },
            "patch": {
                "operationId": "image_partial_update",
                "summary": "이미지 업데이트(재생성) API (==update)",
                "description": "---\n\n### 응답에 최대 40초 소요 가능 \n\n### id : 이미지의 id\n\n## 예시 response:\n\n    201\n    {\n        \"id\": 이미지의 ID,\n        \"created_at\": \"생성 날짜\",\n        \"image_url\": \"s3에 저장된 이미지 url\",\n        \"image_prompt\": \"이미지 생성 프롬프트\",\n        \"diary\": 일기의 ID\n    }\n    401 unauthorized\n    400\n    {\n        'error': \"Failed to get image from Flask\"\n    }\n    400\n    {\n        'error': \"Error uploading image: {str(e)}\"\n    }",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                },
                "tags": ["image"]
            },
            "delete": {
                "operationId": "image_delete",
                "summary": "이미지를 삭제하는 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["image"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this image.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/music/": {
            "get": {
                "operationId": "music_list",
                "summary": "내 Diary에 연결된 Music목록 조회",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Music"
                            }
                        }
                    }
                },
                "tags": ["music"]
            },
            "parameters": []
        },
        "/music/{id}/": {
            "get": {
                "operationId": "music_read",
                "summary": "Music Data 조회 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Music"
                        }
                    }
                },
                "tags": ["music"]
            },
            "delete": {
                "operationId": "music_delete",
                "summary": "Music Data 삭제 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["music"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this music.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/pagies/": {
            "get": {
                "operationId": "pagies_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Page"
                            }
                        }
                    }
                },
                "tags": ["pagies"]
            },
            "post": {
                "operationId": "pagies_create",
                "summary": "일기를 책과 연결함",
                "description": "---\n(일기,책)이 unigue해야 함\n\n## 예시 request:\n        {\n            \"user\":1,\n            \"book\": 1,\n            \"diary\": 100\n        }\n## 예시 response:\n        201\n        {\n            \"id\": 6,\n            \"order\": 2,\n            \"user\": 1,\n            \"book\": 1,\n            \"diary\": 100\n        }\n        404",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                },
                "tags": ["pagies"]
            },
            "parameters": []
        },
        "/pagies/{id}/": {
            "get": {
                "operationId": "pagies_read",
                "summary": "페이지의 ID로 책의 페이지를 조회하는 API",
                "description": "---\n\n### id : Page의 ID",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                },
                "tags": ["pagies"]
            },
            "put": {
                "operationId": "pagies_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                },
                "tags": ["pagies"]
            },
            "patch": {
                "operationId": "pagies_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                },
                "tags": ["pagies"]
            },
            "delete": {
                "operationId": "pagies_delete",
                "summary": "책과 일기 사이의 연결 끊는 API",
                "description": "---",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": ["pagies"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this page.",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "Book": {
            "required": ["book_title", "author", "description", "user"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "book_title": {
                    "title": "Book title",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "author": {
                    "title": "Author",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "minLength": 1
                },
                "created_at": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_open": {
                    "title": "Is open",
                    "type": "boolean"
                },
                "user": {
                    "title": "User",
                    "type": "integer"
                }
            }
        },
        "Music": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "music_title": {
                    "title": "Music title",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "x-nullable": true
                },
                "artist": {
                    "title": "Artist",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "x-nullable": true
                },
                "genre": {
                    "title": "Genre",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1,
                    "x-nullable": true
                }
            }
        },
        "Image": {
            "required": ["diary"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created_at": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "image_url": {
                    "title": "Image url",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 200,
                    "minLength": 1,
                    "x-nullable": true
                },
                "image_prompt": {
                    "title": "Image prompt",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "diary": {
                    "title": "Diary",
                    "type": "integer"
                }
            }
        },
        "Emotion": {
            "required": ["diary"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "emotion_label": {
                    "title": "Emotion label",
                    "type": "string",
                    "maxLength": 10
                },
                "emotion_prompt": {
                    "title": "Emotion prompt",
                    "type": "string"
                },
                "chat": {
                    "title": "Chat",
                    "type": "string"
                },
                "diary": {
                    "title": "Diary",
                    "type": "integer"
                }
            }
        },
        "Diary": {
            "required": ["user", "title"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "user": {
                    "title": "User",
                    "type": "integer"
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "content": {
                    "title": "Content",
                    "type": "string"
                },
                "registered_at": {
                    "title": "Registered at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_update_at": {
                    "title": "Last update at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "music": {
                    "$ref": "#/definitions/Music"
                },
                "is_open": {
                    "title": "Is open",
                    "type": "boolean"
                },
                "image_set": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Image"
                    },
                    "readOnly": true
                },
                "emotion_set": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Emotion"
                    },
                    "readOnly": true
                }
            }
        },
        "User": {
            "required": ["username"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "사용자 이름",
                    "description": "150자 이하 문자, 숫자 그리고 @/./+/-/_만 가능합니다.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        },
        "CommunityDiary": {
            "required": ["title"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "content": {
                    "title": "Content",
                    "type": "string"
                },
                "music": {
                    "$ref": "#/definitions/Music"
                },
                "image_set": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Image"
                    },
                    "readOnly": true
                },
                "registered_at": {
                    "title": "Registered at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_update_at": {
                    "title": "Last update at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_open": {
                    "title": "Is open",
                    "type": "boolean"
                }
            }
        },
        "DiaryMusic": {
            "required": ["user"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "user": {
                    "title": "User",
                    "type": "integer"
                },
                "content": {
                    "title": "Content",
                    "type": "string"
                },
                "music": {
                    "$ref": "#/definitions/Music"
                }
            }
        },
        "Login": {
            "required": ["password"],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string"
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email"
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "PasswordChange": {
            "required": ["new_password1", "new_password2"],
            "type": "object",
            "properties": {
                "new_password1": {
                    "title": "New password1",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "new_password2": {
                    "title": "New password2",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                }
            }
        },
        "PasswordReset": {
            "required": ["email"],
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                }
            }
        },
        "PasswordResetConfirm": {
            "required": ["new_password1", "new_password2", "uid", "token"],
            "type": "object",
            "properties": {
                "new_password1": {
                    "title": "New password1",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "new_password2": {
                    "title": "New password2",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "minLength": 1
                },
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "Register": {
            "required": ["username", "password1", "password2"],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                },
                "password1": {
                    "title": "Password1",
                    "type": "string",
                    "minLength": 1
                },
                "password2": {
                    "title": "Password2",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "ResendEmailVerification": {
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                }
            }
        },
        "VerifyEmail": {
            "required": ["key"],
            "type": "object",
            "properties": {
                "key": {
                    "title": "Key",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "CookieTokenRefresh": {
            "type": "object",
            "properties": {
                "refresh": {
                    "title": "Refresh",
                    "description": "WIll override cookie.",
                    "type": "string",
                    "minLength": 1
                },
                "access": {
                    "title": "Access",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                }
            }
        },
        "TokenVerify": {
            "required": ["token"],
            "type": "object",
            "properties": {
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "UserDetails": {
            "required": ["username"],
            "type": "object",
            "properties": {
                "pk": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "사용자 이름",
                    "description": "150자 이하 문자, 숫자 그리고 @/./+/-/_만 가능합니다.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "이메일 주소",
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "minLength": 1
                },
                "first_name": {
                    "title": "이름",
                    "type": "string",
                    "maxLength": 150
                },
                "last_name": {
                    "title": "성",
                    "type": "string",
                    "maxLength": 150
                }
            }
        },
        "Follow": {
            "required": ["follower", "following_user"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": ["requested", "accepted", "rejected"]
                },
                "follower": {
                    "title": "Follower",
                    "type": "integer"
                },
                "following_user": {
                    "title": "Following user",
                    "type": "integer"
                }
            }
        },
        "Page": {
            "required": ["user", "book", "diary"],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "order": {
                    "title": "Order",
                    "type": "integer",
                    "maximum": 4294967295,
                    "minimum": 0
                },
                "user": {
                    "title": "User",
                    "type": "integer"
                },
                "book": {
                    "title": "Book",
                    "type": "integer"
                },
                "diary": {
                    "title": "Diary",
                    "type": "integer"
                }
            }
        }
    }
}
